in2014/COCO_train2014_000000146645.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524027.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524029.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000392959.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130816.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000392964.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261893.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524041.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000392971.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524044.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261902.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524048.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524049.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524050.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000174723.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000537782.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000309873.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524056.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524059.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000384070.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524062.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524063.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000398040.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130851.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524068.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524069.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130856.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000458716.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261931.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000244406.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000021811.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130869.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261942.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130872.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261945.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130876.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130880.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261955.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261956.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130885.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000078555.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130888.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393033.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000570346.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393036.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393037.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000445175.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130897.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524115.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524118.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000283961.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262116.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393050.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000220842.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130908.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261984.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130914.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524131.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000261990.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393064.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000174738.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524144.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262001.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000419863.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393080.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262009.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524155.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262012.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262013.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393086.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000305813.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393091.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000502422.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393094.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393095.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524168.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393097.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000223461.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130955.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000283970.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524174.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262031.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000410261.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393108.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393110.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000174745.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262041.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130970.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130971.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130972.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130973.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130974.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393121.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524195.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524196.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130981.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393126.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393127.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000453907.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393129.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262059.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000309878.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000240285.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130992.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130993.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000105620.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524211.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393140.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130997.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000130998.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000389312.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000371359.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000131007.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000371360.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000131011.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000144027.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262086.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393159.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000131016.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000415052.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262095.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393169.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262098.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262099.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000415054.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393174.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262103.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393176.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524249.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393178.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524253.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524255.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000477475.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524257.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524259.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000131044.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262118.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000283985.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393193.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000469619.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393195.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262124.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000546130.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524273.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000131058.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000152915.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000131060.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000393207.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000262136.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000131067.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000524286.jpg
/mnt/c/Users/Lavenger/git/py-faster-rcnn/data/coco/images/train2014/COCO_train2014_000000043645.jpg
done
['coco_2015_test', 'coco_2014_val', 'voc_2012_trainval', 'coco_2015_test-dev', 'coco_2014_minival', 'voc_2012_train', 'coco_2014_train', 'coco_2014_valminusminival', 'voc_2007_train', 'voc_2007_test', 'voc_2012_test', 'voc_2012_val', 'voc_2007_trainval', 'voc_2007_val']
loading annotations into memory...
Done (t=16.62s)
creating index...
index created!
165566 roidb entries
Output will be saved to `/mnt/c/Users/Lavenger/git/py-faster-rcnn/output/faster_rcnn_end2end/coco_2014_train`
Filtered 1404 roidb entries: 165566 -> 164162
Computing bounding-box regression targets...
bbox target means:
[[ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]]
[ 0.  0.  0.  0.]
bbox target stdevs:
[[ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]]
[ 0.1  0.1  0.2  0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0411 20:38:02.909626  2805 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/coco/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "bigdata_faster_rcnn"
average_loss: 100
iter_size: 2
I0411 20:38:02.909716  2805 solver.cpp:81] Creating training net from train_net file: models/coco/VGG16/faster_rcnn_end2end/train.prototxt
I0411 20:38:02.913161  2805 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 81"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 24
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 48
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 24
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 81"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 81
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 324
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}
I0411 20:38:02.916203  2805 layer_factory.hpp:77] Creating layer input-data
I0411 20:38:03.034013  2805 net.cpp:106] Creating Layer input-data
I0411 20:38:03.034045  2805 net.cpp:411] input-data -> data
I0411 20:38:03.034054  2805 net.cpp:411] input-data -> im_info
I0411 20:38:03.034060  2805 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0411 20:38:03.110697  2805 net.cpp:150] Setting up input-data
I0411 20:38:03.110725  2805 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0411 20:38:03.110743  2805 net.cpp:157] Top shape: 1 3 (3)
I0411 20:38:03.110754  2805 net.cpp:157] Top shape: 1 4 (4)
I0411 20:38:03.110764  2805 net.cpp:165] Memory required for data: 7200028
I0411 20:38:03.110775  2805 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0411 20:38:03.111456  2805 net.cpp:106] Creating Layer data_input-data_0_split
I0411 20:38:03.111469  2805 net.cpp:454] data_input-data_0_split <- data
I0411 20:38:03.111482  2805 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0411 20:38:03.111500  2805 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0411 20:38:03.112473  2805 net.cpp:150] Setting up data_input-data_0_split
I0411 20:38:03.112485  2805 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0411 20:38:03.112498  2805 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0411 20:38:03.112506  2805 net.cpp:165] Memory required for data: 21600028
I0411 20:38:03.112515  2805 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0411 20:38:03.112529  2805 net.cpp:106] Creating Layer im_info_input-data_1_split
I0411 20:38:03.112539  2805 net.cpp:454] im_info_input-data_1_split <- im_info
I0411 20:38:03.112550  2805 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0411 20:38:03.112563  2805 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0411 20:38:03.112603  2805 net.cpp:150] Setting up im_info_input-data_1_split
I0411 20:38:03.112615  2805 net.cpp:157] Top shape: 1 3 (3)
I0411 20:38:03.112625  2805 net.cpp:157] Top shape: 1 3 (3)
I0411 20:38:03.112633  2805 net.cpp:165] Memory required for data: 21600052
I0411 20:38:03.112643  2805 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0411 20:38:03.112654  2805 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0411 20:38:03.112663  2805 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0411 20:38:03.112675  2805 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0411 20:38:03.112689  2805 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0411 20:38:03.112727  2805 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0411 20:38:03.112740  2805 net.cpp:157] Top shape: 1 4 (4)
I0411 20:38:03.112751  2805 net.cpp:157] Top shape: 1 4 (4)
I0411 20:38:03.112758  2805 net.cpp:165] Memory required for data: 21600084
I0411 20:38:03.112767  2805 layer_factory.hpp:77] Creating layer conv1_1
I0411 20:38:03.112785  2805 net.cpp:106] Creating Layer conv1_1
I0411 20:38:03.112797  2805 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0411 20:38:03.112809  2805 net.cpp:411] conv1_1 -> conv1_1
I0411 20:38:03.698832  2805 net.cpp:150] Setting up conv1_1
I0411 20:38:03.698868  2805 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0411 20:38:03.698881  2805 net.cpp:165] Memory required for data: 175200084
I0411 20:38:03.698899  2805 layer_factory.hpp:77] Creating layer relu1_1
I0411 20:38:03.698915  2805 net.cpp:106] Creating Layer relu1_1
I0411 20:38:03.698921  2805 net.cpp:454] relu1_1 <- conv1_1
I0411 20:38:03.698930  2805 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0411 20:38:03.699187  2805 net.cpp:150] Setting up relu1_1
I0411 20:38:03.699203  2805 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0411 20:38:03.699208  2805 net.cpp:165] Memory required for data: 328800084
I0411 20:38:03.699214  2805 layer_factory.hpp:77] Creating layer conv1_2
I0411 20:38:03.699226  2805 net.cpp:106] Creating Layer conv1_2
I0411 20:38:03.699234  2805 net.cpp:454] conv1_2 <- conv1_1
I0411 20:38:03.699242  2805 net.cpp:411] conv1_2 -> conv1_2
I0411 20:38:03.701519  2805 net.cpp:150] Setting up conv1_2
I0411 20:38:03.701541  2805 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0411 20:38:03.701548  2805 net.cpp:165] Memory required for data: 482400084
I0411 20:38:03.701562  2805 layer_factory.hpp:77] Creating layer relu1_2
I0411 20:38:03.701575  2805 net.cpp:106] Creating Layer relu1_2
I0411 20:38:03.701581  2805 net.cpp:454] relu1_2 <- conv1_2
I0411 20:38:03.701589  2805 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0411 20:38:03.701746  2805 net.cpp:150] Setting up relu1_2
I0411 20:38:03.701854  2805 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0411 20:38:03.701874  2805 net.cpp:165] Memory required for data: 636000084
I0411 20:38:03.701889  2805 layer_factory.hpp:77] Creating layer pool1
I0411 20:38:03.701910  2805 net.cpp:106] Creating Layer pool1
I0411 20:38:03.701927  2805 net.cpp:454] pool1 <- conv1_2
I0411 20:38:03.701948  2805 net.cpp:411] pool1 -> pool1
I0411 20:38:03.702590  2805 net.cpp:150] Setting up pool1
I0411 20:38:03.702616  2805 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0411 20:38:03.702626  2805 net.cpp:165] Memory required for data: 674400084
I0411 20:38:03.702636  2805 layer_factory.hpp:77] Creating layer conv2_1
I0411 20:38:03.702654  2805 net.cpp:106] Creating Layer conv2_1
I0411 20:38:03.702664  2805 net.cpp:454] conv2_1 <- pool1
I0411 20:38:03.702677  2805 net.cpp:411] conv2_1 -> conv2_1
I0411 20:38:03.704655  2805 net.cpp:150] Setting up conv2_1
I0411 20:38:03.704671  2805 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0411 20:38:03.704677  2805 net.cpp:165] Memory required for data: 751200084
I0411 20:38:03.704689  2805 layer_factory.hpp:77] Creating layer relu2_1
I0411 20:38:03.704699  2805 net.cpp:106] Creating Layer relu2_1
I0411 20:38:03.704704  2805 net.cpp:454] relu2_1 <- conv2_1
I0411 20:38:03.704712  2805 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0411 20:38:03.704967  2805 net.cpp:150] Setting up relu2_1
I0411 20:38:03.704982  2805 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0411 20:38:03.704988  2805 net.cpp:165] Memory required for data: 828000084
I0411 20:38:03.704993  2805 layer_factory.hpp:77] Creating layer conv2_2
I0411 20:38:03.705004  2805 net.cpp:106] Creating Layer conv2_2
I0411 20:38:03.705010  2805 net.cpp:454] conv2_2 <- conv2_1
I0411 20:38:03.705019  2805 net.cpp:411] conv2_2 -> conv2_2
I0411 20:38:03.706701  2805 net.cpp:150] Setting up conv2_2
I0411 20:38:03.706718  2805 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0411 20:38:03.706725  2805 net.cpp:165] Memory required for data: 904800084
I0411 20:38:03.706735  2805 layer_factory.hpp:77] Creating layer relu2_2
I0411 20:38:03.706744  2805 net.cpp:106] Creating Layer relu2_2
I0411 20:38:03.706751  2805 net.cpp:454] relu2_2 <- conv2_2
I0411 20:38:03.706759  2805 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0411 20:38:03.707047  2805 net.cpp:150] Setting up relu2_2
I0411 20:38:03.707063  2805 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0411 20:38:03.707070  2805 net.cpp:165] Memory required for data: 981600084
I0411 20:38:03.707078  2805 layer_factory.hpp:77] Creating layer pool2
I0411 20:38:03.707088  2805 net.cpp:106] Creating Layer pool2
I0411 20:38:03.707095  2805 net.cpp:454] pool2 <- conv2_2
I0411 20:38:03.707104  2805 net.cpp:411] pool2 -> pool2
I0411 20:38:03.707150  2805 net.cpp:150] Setting up pool2
I0411 20:38:03.707160  2805 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0411 20:38:03.707167  2805 net.cpp:165] Memory required for data: 1000800084
I0411 20:38:03.707173  2805 layer_factory.hpp:77] Creating layer conv3_1
I0411 20:38:03.707185  2805 net.cpp:106] Creating Layer conv3_1
I0411 20:38:03.707191  2805 net.cpp:454] conv3_1 <- pool2
I0411 20:38:03.707201  2805 net.cpp:411] conv3_1 -> conv3_1
I0411 20:38:03.708884  2805 net.cpp:150] Setting up conv3_1
I0411 20:38:03.708901  2805 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0411 20:38:03.708909  2805 net.cpp:165] Memory required for data: 1039200084
I0411 20:38:03.708923  2805 layer_factory.hpp:77] Creating layer relu3_1
I0411 20:38:03.708933  2805 net.cpp:106] Creating Layer relu3_1
I0411 20:38:03.708940  2805 net.cpp:454] relu3_1 <- conv3_1
I0411 20:38:03.708950  2805 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0411 20:38:03.709127  2805 net.cpp:150] Setting up relu3_1
I0411 20:38:03.709138  2805 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0411 20:38:03.709146  2805 net.cpp:165] Memory required for data: 1077600084
I0411 20:38:03.709152  2805 layer_factory.hpp:77] Creating layer conv3_2
I0411 20:38:03.709167  2805 net.cpp:106] Creating Layer conv3_2
I0411 20:38:03.709173  2805 net.cpp:454] conv3_2 <- conv3_1
I0411 20:38:03.709183  2805 net.cpp:411] conv3_2 -> conv3_2
I0411 20:38:03.711822  2805 net.cpp:150] Setting up conv3_2
I0411 20:38:03.711860  2805 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0411 20:38:03.711869  2805 net.cpp:165] Memory required for data: 1116000084
I0411 20:38:03.711884  2805 layer_factory.hpp:77] Creating layer relu3_2
I0411 20:38:03.711899  2805 net.cpp:106] Creating Layer relu3_2
I0411 20:38:03.711907  2805 net.cpp:454] relu3_2 <- conv3_2
I0411 20:38:03.711917  2805 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0411 20:38:03.712271  2805 net.cpp:150] Setting up relu3_2
I0411 20:38:03.712294  2805 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0411 20:38:03.712301  2805 net.cpp:165] Memory required for data: 1154400084
I0411 20:38:03.712311  2805 layer_factory.hpp:77] Creating layer conv3_3
I0411 20:38:03.712327  2805 net.cpp:106] Creating Layer conv3_3
I0411 20:38:03.712337  2805 net.cpp:454] conv3_3 <- conv3_2
I0411 20:38:03.712345  2805 net.cpp:411] conv3_3 -> conv3_3
I0411 20:38:03.717223  2805 net.cpp:150] Setting up conv3_3
I0411 20:38:03.717247  2805 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0411 20:38:03.717252  2805 net.cpp:165] Memory required for data: 1192800084
I0411 20:38:03.717263  2805 layer_factory.hpp:77] Creating layer relu3_3
I0411 20:38:03.717274  2805 net.cpp:106] Creating Layer relu3_3
I0411 20:38:03.717280  2805 net.cpp:454] relu3_3 <- conv3_3
I0411 20:38:03.717288  2805 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0411 20:38:03.717504  2805 net.cpp:150] Setting up relu3_3
I0411 20:38:03.717516  2805 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0411 20:38:03.717521  2805 net.cpp:165] Memory required for data: 1231200084
I0411 20:38:03.717526  2805 layer_factory.hpp:77] Creating layer pool3
I0411 20:38:03.717535  2805 net.cpp:106] Creating Layer pool3
I0411 20:38:03.717540  2805 net.cpp:454] pool3 <- conv3_3
I0411 20:38:03.717547  2805 net.cpp:411] pool3 -> pool3
I0411 20:38:03.717583  2805 net.cpp:150] Setting up pool3
I0411 20:38:03.717592  2805 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0411 20:38:03.717597  2805 net.cpp:165] Memory required for data: 1240800084
I0411 20:38:03.717600  2805 layer_factory.hpp:77] Creating layer conv4_1
I0411 20:38:03.717609  2805 net.cpp:106] Creating Layer conv4_1
I0411 20:38:03.717614  2805 net.cpp:454] conv4_1 <- pool3
I0411 20:38:03.717622  2805 net.cpp:411] conv4_1 -> conv4_1
I0411 20:38:03.720793  2805 net.cpp:150] Setting up conv4_1
I0411 20:38:03.720825  2805 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0411 20:38:03.720831  2805 net.cpp:165] Memory required for data: 1260000084
I0411 20:38:03.720841  2805 layer_factory.hpp:77] Creating layer relu4_1
I0411 20:38:03.720854  2805 net.cpp:106] Creating Layer relu4_1
I0411 20:38:03.720860  2805 net.cpp:454] relu4_1 <- conv4_1
I0411 20:38:03.720868  2805 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0411 20:38:03.721099  2805 net.cpp:150] Setting up relu4_1
I0411 20:38:03.721110  2805 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0411 20:38:03.721115  2805 net.cpp:165] Memory required for data: 1279200084
I0411 20:38:03.721138  2805 layer_factory.hpp:77] Creating layer conv4_2
I0411 20:38:03.721148  2805 net.cpp:106] Creating Layer conv4_2
I0411 20:38:03.721153  2805 net.cpp:454] conv4_2 <- conv4_1
I0411 20:38:03.721174  2805 net.cpp:411] conv4_2 -> conv4_2
I0411 20:38:03.725432  2805 net.cpp:150] Setting up conv4_2
I0411 20:38:03.725457  2805 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0411 20:38:03.725463  2805 net.cpp:165] Memory required for data: 1298400084
I0411 20:38:03.725476  2805 layer_factory.hpp:77] Creating layer relu4_2
I0411 20:38:03.725487  2805 net.cpp:106] Creating Layer relu4_2
I0411 20:38:03.725493  2805 net.cpp:454] relu4_2 <- conv4_2
I0411 20:38:03.725500  2805 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0411 20:38:03.726186  2805 net.cpp:150] Setting up relu4_2
I0411 20:38:03.726218  2805 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0411 20:38:03.726225  2805 net.cpp:165] Memory required for data: 1317600084
I0411 20:38:03.726244  2805 layer_factory.hpp:77] Creating layer conv4_3
I0411 20:38:03.726258  2805 net.cpp:106] Creating Layer conv4_3
I0411 20:38:03.726263  2805 net.cpp:454] conv4_3 <- conv4_2
I0411 20:38:03.726270  2805 net.cpp:411] conv4_3 -> conv4_3
I0411 20:38:03.735532  2805 net.cpp:150] Setting up conv4_3
I0411 20:38:03.735559  2805 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0411 20:38:03.735584  2805 net.cpp:165] Memory required for data: 1336800084
I0411 20:38:03.735607  2805 layer_factory.hpp:77] Creating layer relu4_3
I0411 20:38:03.735618  2805 net.cpp:106] Creating Layer relu4_3
I0411 20:38:03.735625  2805 net.cpp:454] relu4_3 <- conv4_3
I0411 20:38:03.735631  2805 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0411 20:38:03.736287  2805 net.cpp:150] Setting up relu4_3
I0411 20:38:03.736299  2805 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0411 20:38:03.736304  2805 net.cpp:165] Memory required for data: 1356000084
I0411 20:38:03.736328  2805 layer_factory.hpp:77] Creating layer pool4
I0411 20:38:03.736336  2805 net.cpp:106] Creating Layer pool4
I0411 20:38:03.736341  2805 net.cpp:454] pool4 <- conv4_3
I0411 20:38:03.736348  2805 net.cpp:411] pool4 -> pool4
I0411 20:38:03.736413  2805 net.cpp:150] Setting up pool4
I0411 20:38:03.736420  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.736424  2805 net.cpp:165] Memory required for data: 1360902996
I0411 20:38:03.736428  2805 layer_factory.hpp:77] Creating layer conv5_1
I0411 20:38:03.736456  2805 net.cpp:106] Creating Layer conv5_1
I0411 20:38:03.736461  2805 net.cpp:454] conv5_1 <- pool4
I0411 20:38:03.736469  2805 net.cpp:411] conv5_1 -> conv5_1
I0411 20:38:03.740890  2805 net.cpp:150] Setting up conv5_1
I0411 20:38:03.740936  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.740942  2805 net.cpp:165] Memory required for data: 1365805908
I0411 20:38:03.740953  2805 layer_factory.hpp:77] Creating layer relu5_1
I0411 20:38:03.740965  2805 net.cpp:106] Creating Layer relu5_1
I0411 20:38:03.740972  2805 net.cpp:454] relu5_1 <- conv5_1
I0411 20:38:03.740979  2805 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0411 20:38:03.741114  2805 net.cpp:150] Setting up relu5_1
I0411 20:38:03.741122  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.741127  2805 net.cpp:165] Memory required for data: 1370708820
I0411 20:38:03.741150  2805 layer_factory.hpp:77] Creating layer conv5_2
I0411 20:38:03.741159  2805 net.cpp:106] Creating Layer conv5_2
I0411 20:38:03.741164  2805 net.cpp:454] conv5_2 <- conv5_1
I0411 20:38:03.741171  2805 net.cpp:411] conv5_2 -> conv5_2
I0411 20:38:03.746211  2805 net.cpp:150] Setting up conv5_2
I0411 20:38:03.746264  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.746270  2805 net.cpp:165] Memory required for data: 1375611732
I0411 20:38:03.746282  2805 layer_factory.hpp:77] Creating layer relu5_2
I0411 20:38:03.746296  2805 net.cpp:106] Creating Layer relu5_2
I0411 20:38:03.746304  2805 net.cpp:454] relu5_2 <- conv5_2
I0411 20:38:03.746325  2805 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0411 20:38:03.746574  2805 net.cpp:150] Setting up relu5_2
I0411 20:38:03.746585  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.746608  2805 net.cpp:165] Memory required for data: 1380514644
I0411 20:38:03.746613  2805 layer_factory.hpp:77] Creating layer conv5_3
I0411 20:38:03.746629  2805 net.cpp:106] Creating Layer conv5_3
I0411 20:38:03.746634  2805 net.cpp:454] conv5_3 <- conv5_2
I0411 20:38:03.746642  2805 net.cpp:411] conv5_3 -> conv5_3
I0411 20:38:03.751405  2805 net.cpp:150] Setting up conv5_3
I0411 20:38:03.751431  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.751436  2805 net.cpp:165] Memory required for data: 1385417556
I0411 20:38:03.751446  2805 layer_factory.hpp:77] Creating layer relu5_3
I0411 20:38:03.751456  2805 net.cpp:106] Creating Layer relu5_3
I0411 20:38:03.751462  2805 net.cpp:454] relu5_3 <- conv5_3
I0411 20:38:03.751471  2805 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0411 20:38:03.751729  2805 net.cpp:150] Setting up relu5_3
I0411 20:38:03.751740  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.751745  2805 net.cpp:165] Memory required for data: 1390320468
I0411 20:38:03.751751  2805 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0411 20:38:03.751765  2805 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0411 20:38:03.751770  2805 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0411 20:38:03.751775  2805 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0411 20:38:03.751783  2805 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0411 20:38:03.751821  2805 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0411 20:38:03.751827  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.751832  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.751837  2805 net.cpp:165] Memory required for data: 1400126292
I0411 20:38:03.751842  2805 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0411 20:38:03.751857  2805 net.cpp:106] Creating Layer rpn_conv/3x3
I0411 20:38:03.751863  2805 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0411 20:38:03.751869  2805 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0411 20:38:03.812145  2805 net.cpp:150] Setting up rpn_conv/3x3
I0411 20:38:03.812170  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.812193  2805 net.cpp:165] Memory required for data: 1405029204
I0411 20:38:03.812203  2805 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0411 20:38:03.812214  2805 net.cpp:106] Creating Layer rpn_relu/3x3
I0411 20:38:03.812221  2805 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0411 20:38:03.812227  2805 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0411 20:38:03.812379  2805 net.cpp:150] Setting up rpn_relu/3x3
I0411 20:38:03.812388  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.812392  2805 net.cpp:165] Memory required for data: 1409932116
I0411 20:38:03.812397  2805 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0411 20:38:03.812422  2805 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0411 20:38:03.812427  2805 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0411 20:38:03.812434  2805 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0411 20:38:03.812454  2805 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0411 20:38:03.812489  2805 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0411 20:38:03.812496  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.812501  2805 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0411 20:38:03.812518  2805 net.cpp:165] Memory required for data: 1419737940
I0411 20:38:03.812522  2805 layer_factory.hpp:77] Creating layer rpn_cls_score
I0411 20:38:03.812566  2805 net.cpp:106] Creating Layer rpn_cls_score
I0411 20:38:03.812572  2805 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0411 20:38:03.812578  2805 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0411 20:38:03.813680  2805 net.cpp:150] Setting up rpn_cls_score
I0411 20:38:03.813693  2805 net.cpp:157] Top shape: 1 24 38 63 (57456)
I0411 20:38:03.813697  2805 net.cpp:165] Memory required for data: 1419967764
I0411 20:38:03.813724  2805 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0411 20:38:03.813730  2805 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0411 20:38:03.813735  2805 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0411 20:38:03.813742  2805 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0411 20:38:03.813766  2805 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0411 20:38:03.813802  2805 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0411 20:38:03.813822  2805 net.cpp:157] Top shape: 1 24 38 63 (57456)
I0411 20:38:03.813827  2805 net.cpp:157] Top shape: 1 24 38 63 (57456)
I0411 20:38:03.813848  2805 net.cpp:165] Memory required for data: 1420427412
I0411 20:38:03.813853  2805 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0411 20:38:03.813876  2805 net.cpp:106] Creating Layer rpn_bbox_pred
I0411 20:38:03.813881  2805 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0411 20:38:03.813889  2805 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0411 20:38:03.815196  2805 net.cpp:150] Setting up rpn_bbox_pred
I0411 20:38:03.815208  2805 net.cpp:157] Top shape: 1 48 38 63 (114912)
I0411 20:38:03.815213  2805 net.cpp:165] Memory required for data: 1420887060
I0411 20:38:03.815238  2805 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0411 20:38:03.815245  2805 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0411 20:38:03.815251  2805 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0411 20:38:03.815258  2805 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0411 20:38:03.815265  2805 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0411 20:38:03.815325  2805 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0411 20:38:03.815347  2805 net.cpp:157] Top shape: 1 48 38 63 (114912)
I0411 20:38:03.815353  2805 net.cpp:157] Top shape: 1 48 38 63 (114912)
I0411 20:38:03.815376  2805 net.cpp:165] Memory required for data: 1421806356
I0411 20:38:03.815379  2805 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0411 20:38:03.815388  2805 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0411 20:38:03.815407  2805 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0411 20:38:03.815412  2805 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0411 20:38:03.815434  2805 net.cpp:150] Setting up rpn_cls_score_reshape
I0411 20:38:03.815441  2805 net.cpp:157] Top shape: 1 2 456 63 (57456)
I0411 20:38:03.815445  2805 net.cpp:165] Memory required for data: 1422036180
I0411 20:38:03.815450  2805 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 20:38:03.815469  2805 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 20:38:03.815474  2805 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0411 20:38:03.815479  2805 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 20:38:03.815485  2805 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 20:38:03.815512  2805 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 20:38:03.815518  2805 net.cpp:157] Top shape: 1 2 456 63 (57456)
I0411 20:38:03.815522  2805 net.cpp:157] Top shape: 1 2 456 63 (57456)
I0411 20:38:03.815526  2805 net.cpp:165] Memory required for data: 1422495828
I0411 20:38:03.815531  2805 layer_factory.hpp:77] Creating layer rpn-data
I0411 20:38:03.817559  2805 net.cpp:106] Creating Layer rpn-data
I0411 20:38:03.817574  2805 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0411 20:38:03.817580  2805 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0411 20:38:03.817586  2805 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0411 20:38:03.817592  2805 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0411 20:38:03.817600  2805 net.cpp:411] rpn-data -> rpn_labels
I0411 20:38:03.817607  2805 net.cpp:411] rpn-data -> rpn_bbox_targets
I0411 20:38:03.817615  2805 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0411 20:38:03.817621  2805 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0411 20:38:03.818675  2805 net.cpp:150] Setting up rpn-data
I0411 20:38:03.818688  2805 net.cpp:157] Top shape: 1 1 456 63 (28728)
I0411 20:38:03.818693  2805 net.cpp:157] Top shape: 1 48 38 63 (114912)
I0411 20:38:03.818698  2805 net.cpp:157] Top shape: 1 48 38 63 (114912)
I0411 20:38:03.818703  2805 net.cpp:157] Top shape: 1 48 38 63 (114912)
I0411 20:38:03.818707  2805 net.cpp:165] Memory required for data: 1423989684
I0411 20:38:03.818712  2805 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 20:38:03.818722  2805 net.cpp:106] Creating Layer rpn_loss_cls
I0411 20:38:03.818727  2805 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 20:38:03.818732  2805 net.cpp:454] rpn_loss_cls <- rpn_labels
I0411 20:38:03.818738  2805 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0411 20:38:03.818753  2805 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 20:38:03.819373  2805 net.cpp:150] Setting up rpn_loss_cls
I0411 20:38:03.819386  2805 net.cpp:157] Top shape: (1)
I0411 20:38:03.819391  2805 net.cpp:160]     with loss weight 1
I0411 20:38:03.819401  2805 net.cpp:165] Memory required for data: 1423989688
I0411 20:38:03.819404  2805 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0411 20:38:03.819413  2805 net.cpp:106] Creating Layer rpn_loss_bbox
I0411 20:38:03.819418  2805 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0411 20:38:03.819424  2805 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0411 20:38:03.819430  2805 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0411 20:38:03.819435  2805 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0411 20:38:03.819442  2805 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0411 20:38:03.820241  2805 net.cpp:150] Setting up rpn_loss_bbox
I0411 20:38:03.820251  2805 net.cpp:157] Top shape: (1)
I0411 20:38:03.820256  2805 net.cpp:160]     with loss weight 1
I0411 20:38:03.820262  2805 net.cpp:165] Memory required for data: 1423989692
I0411 20:38:03.820267  2805 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0411 20:38:03.820273  2805 net.cpp:106] Creating Layer rpn_cls_prob
I0411 20:38:03.820278  2805 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 20:38:03.820286  2805 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0411 20:38:03.820564  2805 net.cpp:150] Setting up rpn_cls_prob
I0411 20:38:03.820574  2805 net.cpp:157] Top shape: 1 2 456 63 (57456)
I0411 20:38:03.820579  2805 net.cpp:165] Memory required for data: 1424219516
I0411 20:38:03.820583  2805 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0411 20:38:03.820591  2805 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0411 20:38:03.820596  2805 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0411 20:38:03.820603  2805 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0411 20:38:03.820626  2805 net.cpp:150] Setting up rpn_cls_prob_reshape
I0411 20:38:03.820633  2805 net.cpp:157] Top shape: 1 24 38 63 (57456)
I0411 20:38:03.820637  2805 net.cpp:165] Memory required for data: 1424449340
I0411 20:38:03.820641  2805 layer_factory.hpp:77] Creating layer proposal
I0411 20:38:03.827316  2805 net.cpp:106] Creating Layer proposal
I0411 20:38:03.827334  2805 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0411 20:38:03.827340  2805 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0411 20:38:03.827344  2805 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0411 20:38:03.827350  2805 net.cpp:411] proposal -> rpn_rois
I0411 20:38:03.829973  2805 net.cpp:150] Setting up proposal
I0411 20:38:03.829991  2805 net.cpp:157] Top shape: 1 5 (5)
I0411 20:38:03.830014  2805 net.cpp:165] Memory required for data: 1424449360
I0411 20:38:03.830020  2805 layer_factory.hpp:77] Creating layer roi-data
I0411 20:38:03.862678  2805 net.cpp:106] Creating Layer roi-data
I0411 20:38:03.862706  2805 net.cpp:454] roi-data <- rpn_rois
I0411 20:38:03.862717  2805 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0411 20:38:03.862726  2805 net.cpp:411] roi-data -> rois
I0411 20:38:03.862737  2805 net.cpp:411] roi-data -> labels
I0411 20:38:03.862748  2805 net.cpp:411] roi-data -> bbox_targets
I0411 20:38:03.862757  2805 net.cpp:411] roi-data -> bbox_inside_weights
I0411 20:38:03.862766  2805 net.cpp:411] roi-data -> bbox_outside_weights
I0411 20:38:03.863328  2805 net.cpp:150] Setting up roi-data
I0411 20:38:03.863346  2805 net.cpp:157] Top shape: 1 5 (5)
I0411 20:38:03.863353  2805 net.cpp:157] Top shape: 1 1 (1)
I0411 20:38:03.863359  2805 net.cpp:157] Top shape: 1 324 (324)
I0411 20:38:03.863365  2805 net.cpp:157] Top shape: 1 324 (324)
I0411 20:38:03.863373  2805 net.cpp:157] Top shape: 1 324 (324)
I0411 20:38:03.863378  2805 net.cpp:165] Memory required for data: 1424453272
I0411 20:38:03.863384  2805 layer_factory.hpp:77] Creating layer roi_pool5
I0411 20:38:03.863395  2805 net.cpp:106] Creating Layer roi_pool5
I0411 20:38:03.863402  2805 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0411 20:38:03.863410  2805 net.cpp:454] roi_pool5 <- rois
I0411 20:38:03.863418  2805 net.cpp:411] roi_pool5 -> pool5
I0411 20:38:03.863428  2805 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0411 20:38:03.863481  2805 net.cpp:150] Setting up roi_pool5
I0411 20:38:03.863490  2805 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0411 20:38:03.863495  2805 net.cpp:165] Memory required for data: 1424553624
I0411 20:38:03.863502  2805 layer_factory.hpp:77] Creating layer fc6
I0411 20:38:03.863512  2805 net.cpp:106] Creating Layer fc6
I0411 20:38:03.863517  2805 net.cpp:454] fc6 <- pool5
I0411 20:38:03.863526  2805 net.cpp:411] fc6 -> fc6
I0411 20:38:04.032271  2805 net.cpp:150] Setting up fc6
I0411 20:38:04.032318  2805 net.cpp:157] Top shape: 1 4096 (4096)
I0411 20:38:04.032325  2805 net.cpp:165] Memory required for data: 1424570008
I0411 20:38:04.032356  2805 layer_factory.hpp:77] Creating layer relu6
I0411 20:38:04.032367  2805 net.cpp:106] Creating Layer relu6
I0411 20:38:04.032374  2805 net.cpp:454] relu6 <- fc6
I0411 20:38:04.032382  2805 net.cpp:397] relu6 -> fc6 (in-place)
I0411 20:38:04.032693  2805 net.cpp:150] Setting up relu6
I0411 20:38:04.032706  2805 net.cpp:157] Top shape: 1 4096 (4096)
I0411 20:38:04.032711  2805 net.cpp:165] Memory required for data: 1424586392
I0411 20:38:04.032733  2805 layer_factory.hpp:77] Creating layer fc7
I0411 20:38:04.032742  2805 net.cpp:106] Creating Layer fc7
I0411 20:38:04.032747  2805 net.cpp:454] fc7 <- fc6
I0411 20:38:04.032753  2805 net.cpp:411] fc7 -> fc7
I0411 20:38:04.056095  2805 net.cpp:150] Setting up fc7
I0411 20:38:04.056120  2805 net.cpp:157] Top shape: 1 4096 (4096)
I0411 20:38:04.056144  2805 net.cpp:165] Memory required for data: 1424602776
I0411 20:38:04.056155  2805 layer_factory.hpp:77] Creating layer relu7
I0411 20:38:04.056181  2805 net.cpp:106] Creating Layer relu7
I0411 20:38:04.056187  2805 net.cpp:454] relu7 <- fc7
I0411 20:38:04.056195  2805 net.cpp:397] relu7 -> fc7 (in-place)
I0411 20:38:04.056392  2805 net.cpp:150] Setting up relu7
I0411 20:38:04.056401  2805 net.cpp:157] Top shape: 1 4096 (4096)
I0411 20:38:04.056406  2805 net.cpp:165] Memory required for data: 1424619160
I0411 20:38:04.056428  2805 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0411 20:38:04.056437  2805 net.cpp:106] Creating Layer fc7_relu7_0_split
I0411 20:38:04.056442  2805 net.cpp:454] fc7_relu7_0_split <- fc7
I0411 20:38:04.056447  2805 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0411 20:38:04.056455  2805 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0411 20:38:04.056504  2805 net.cpp:150] Setting up fc7_relu7_0_split
I0411 20:38:04.056512  2805 net.cpp:157] Top shape: 1 4096 (4096)
I0411 20:38:04.056517  2805 net.cpp:157] Top shape: 1 4096 (4096)
I0411 20:38:04.056521  2805 net.cpp:165] Memory required for data: 1424651928
I0411 20:38:04.056526  2805 layer_factory.hpp:77] Creating layer cls_score
I0411 20:38:04.056556  2805 net.cpp:106] Creating Layer cls_score
I0411 20:38:04.056561  2805 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0411 20:38:04.056568  2805 net.cpp:411] cls_score -> cls_score
I0411 20:38:04.066191  2805 net.cpp:150] Setting up cls_score
I0411 20:38:04.066213  2805 net.cpp:157] Top shape: 1 81 (81)
I0411 20:38:04.066237  2805 net.cpp:165] Memory required for data: 1424652252
I0411 20:38:04.066261  2805 layer_factory.hpp:77] Creating layer bbox_pred
I0411 20:38:04.066272  2805 net.cpp:106] Creating Layer bbox_pred
I0411 20:38:04.066277  2805 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0411 20:38:04.066285  2805 net.cpp:411] bbox_pred -> bbox_pred
I0411 20:38:04.100136  2805 net.cpp:150] Setting up bbox_pred
I0411 20:38:04.100157  2805 net.cpp:157] Top shape: 1 324 (324)
I0411 20:38:04.100180  2805 net.cpp:165] Memory required for data: 1424653548
I0411 20:38:04.100190  2805 layer_factory.hpp:77] Creating layer loss_cls
I0411 20:38:04.100201  2805 net.cpp:106] Creating Layer loss_cls
I0411 20:38:04.100214  2805 net.cpp:454] loss_cls <- cls_score
I0411 20:38:04.100220  2805 net.cpp:454] loss_cls <- labels
I0411 20:38:04.100239  2805 net.cpp:411] loss_cls -> loss_cls
I0411 20:38:04.100251  2805 layer_factory.hpp:77] Creating layer loss_cls
I0411 20:38:04.100628  2805 net.cpp:150] Setting up loss_cls
I0411 20:38:04.100767  2805 net.cpp:157] Top shape: (1)
I0411 20:38:04.100800  2805 net.cpp:160]     with loss weight 1
I0411 20:38:04.100816  2805 net.cpp:165] Memory required for data: 1424653552
I0411 20:38:04.100842  2805 layer_factory.hpp:77] Creating layer loss_bbox
I0411 20:38:04.100857  2805 net.cpp:106] Creating Layer loss_bbox
I0411 20:38:04.100872  2805 net.cpp:454] loss_bbox <- bbox_pred
I0411 20:38:04.100886  2805 net.cpp:454] loss_bbox <- bbox_targets
I0411 20:38:04.100899  2805 net.cpp:454] loss_bbox <- bbox_inside_weights
I0411 20:38:04.100913  2805 net.cpp:454] loss_bbox <- bbox_outside_weights
I0411 20:38:04.100925  2805 net.cpp:411] loss_bbox -> loss_bbox
I0411 20:38:04.101006  2805 net.cpp:150] Setting up loss_bbox
I0411 20:38:04.101039  2805 net.cpp:157] Top shape: (1)
I0411 20:38:04.101069  2805 net.cpp:160]     with loss weight 1
I0411 20:38:04.101083  2805 net.cpp:165] Memory required for data: 1424653556
I0411 20:38:04.101107  2805 net.cpp:226] loss_bbox needs backward computation.
I0411 20:38:04.101120  2805 net.cpp:226] loss_cls needs backward computation.
I0411 20:38:04.101133  2805 net.cpp:226] bbox_pred needs backward computation.
I0411 20:38:04.101146  2805 net.cpp:226] cls_score needs backward computation.
I0411 20:38:04.101160  2805 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0411 20:38:04.101172  2805 net.cpp:226] relu7 needs backward computation.
I0411 20:38:04.101184  2805 net.cpp:226] fc7 needs backward computation.
I0411 20:38:04.101197  2805 net.cpp:226] relu6 needs backward computation.
I0411 20:38:04.101209  2805 net.cpp:226] fc6 needs backward computation.
I0411 20:38:04.101222  2805 net.cpp:226] roi_pool5 needs backward computation.
I0411 20:38:04.101235  2805 net.cpp:226] roi-data needs backward computation.
I0411 20:38:04.101248  2805 net.cpp:226] proposal needs backward computation.
I0411 20:38:04.101261  2805 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0411 20:38:04.101274  2805 net.cpp:226] rpn_cls_prob needs backward computation.
I0411 20:38:04.101286  2805 net.cpp:226] rpn_loss_bbox needs backward computation.
I0411 20:38:04.101300  2805 net.cpp:226] rpn_loss_cls needs backward computation.
I0411 20:38:04.101312  2805 net.cpp:226] rpn-data needs backward computation.
I0411 20:38:04.101327  2805 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0411 20:38:04.101341  2805 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0411 20:38:04.101380  2805 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0411 20:38:04.101393  2805 net.cpp:226] rpn_bbox_pred needs backward computation.
I0411 20:38:04.101407  2805 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0411 20:38:04.101419  2805 net.cpp:226] rpn_cls_score needs backward computation.
I0411 20:38:04.101433  2805 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0411 20:38:04.101445  2805 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0411 20:38:04.101459  2805 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0411 20:38:04.101471  2805 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0411 20:38:04.101483  2805 net.cpp:226] relu5_3 needs backward computation.
I0411 20:38:04.101496  2805 net.cpp:226] conv5_3 needs backward computation.
I0411 20:38:04.101510  2805 net.cpp:226] relu5_2 needs backward computation.
I0411 20:38:04.101521  2805 net.cpp:226] conv5_2 needs backward computation.
I0411 20:38:04.101532  2805 net.cpp:226] relu5_1 needs backward computation.
I0411 20:38:04.101543  2805 net.cpp:226] conv5_1 needs backward computation.
I0411 20:38:04.101568  2805 net.cpp:226] pool4 needs backward computation.
I0411 20:38:04.101580  2805 net.cpp:226] relu4_3 needs backward computation.
I0411 20:38:04.101591  2805 net.cpp:226] conv4_3 needs backward computation.
I0411 20:38:04.101603  2805 net.cpp:226] relu4_2 needs backward computation.
I0411 20:38:04.101613  2805 net.cpp:226] conv4_2 needs backward computation.
I0411 20:38:04.101625  2805 net.cpp:226] relu4_1 needs backward computation.
I0411 20:38:04.101636  2805 net.cpp:226] conv4_1 needs backward computation.
I0411 20:38:04.101647  2805 net.cpp:226] pool3 needs backward computation.
I0411 20:38:04.101658  2805 net.cpp:226] relu3_3 needs backward computation.
I0411 20:38:04.101670  2805 net.cpp:226] conv3_3 needs backward computation.
I0411 20:38:04.101681  2805 net.cpp:226] relu3_2 needs backward computation.
I0411 20:38:04.101692  2805 net.cpp:226] conv3_2 needs backward computation.
I0411 20:38:04.101703  2805 net.cpp:226] relu3_1 needs backward computation.
I0411 20:38:04.101714  2805 net.cpp:226] conv3_1 needs backward computation.
I0411 20:38:04.101725  2805 net.cpp:228] pool2 does not need backward computation.
I0411 20:38:04.101737  2805 net.cpp:228] relu2_2 does not need backward computation.
I0411 20:38:04.101748  2805 net.cpp:228] conv2_2 does not need backward computation.
I0411 20:38:04.101760  2805 net.cpp:228] relu2_1 does not need backward computation.
I0411 20:38:04.101771  2805 net.cpp:228] conv2_1 does not need backward computation.
I0411 20:38:04.101783  2805 net.cpp:228] pool1 does not need backward computation.
I0411 20:38:04.101794  2805 net.cpp:228] relu1_2 does not need backward computation.
I0411 20:38:04.101805  2805 net.cpp:228] conv1_2 does not need backward computation.
I0411 20:38:04.101817  2805 net.cpp:228] relu1_1 does not need backward computation.
I0411 20:38:04.101829  2805 net.cpp:228] conv1_1 does not need backward computation.
I0411 20:38:04.101840  2805 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0411 20:38:04.101852  2805 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0411 20:38:04.101866  2805 net.cpp:228] data_input-data_0_split does not need backward computation.
I0411 20:38:04.101877  2805 net.cpp:228] input-data does not need backward computation.
I0411 20:38:04.101887  2805 net.cpp:270] This network produces output loss_bbox
I0411 20:38:04.101899  2805 net.cpp:270] This network produces output loss_cls
I0411 20:38:04.101910  2805 net.cpp:270] This network produces output rpn_cls_loss
I0411 20:38:04.101922  2805 net.cpp:270] This network produces output rpn_loss_bbox
I0411 20:38:04.101964  2805 net.cpp:283] Network initialization done.
I0411 20:38:04.102248  2805 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0411 20:38:09.897554  2805 net.cpp:816] Ignoring source layer pool5
I0411 20:38:09.980710  2805 net.cpp:816] Ignoring source layer drop6
I0411 20:38:09.992051  2805 net.cpp:816] Ignoring source layer drop7
I0411 20:38:09.992082  2805 net.cpp:816] Ignoring source layer fc8
I0411 20:38:09.992090  2805 net.cpp:816] Ignoring source layer prob
Solving...
I0411 20:38:11.857627  2805 solver.cpp:229] Iteration 0, loss = 5.45466
I0411 20:38:11.857702  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.352306 (* 1 = 0.352306 loss)
I0411 20:38:11.857718  2805 solver.cpp:245]     Train net output #1: loss_cls = 4.12076 (* 1 = 4.12076 loss)
I0411 20:38:11.857734  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.776554 (* 1 = 0.776554 loss)
I0411 20:38:11.857749  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.210799 (* 1 = 0.210799 loss)
I0411 20:38:11.857766  2805 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0411 20:38:54.524467  2805 solver.cpp:229] Iteration 20, loss = 1.29527
I0411 20:38:54.524516  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.319575 (* 1 = 0.319575 loss)
I0411 20:38:54.524538  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.681508 (* 1 = 0.681508 loss)
I0411 20:38:54.524544  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.311807 (* 1 = 0.311807 loss)
I0411 20:38:54.524551  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0553812 (* 1 = 0.0553812 loss)
I0411 20:38:54.524559  2805 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0411 20:39:35.836432  2805 solver.cpp:229] Iteration 40, loss = 0.841448
I0411 20:39:35.836463  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.356699 (* 1 = 0.356699 loss)
I0411 20:39:35.836490  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.802953 (* 1 = 0.802953 loss)
I0411 20:39:35.836498  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.195157 (* 1 = 0.195157 loss)
I0411 20:39:35.836504  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0366556 (* 1 = 0.0366556 loss)
I0411 20:39:35.836511  2805 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0411 20:40:18.608073  2805 solver.cpp:229] Iteration 60, loss = 2.26185
I0411 20:40:18.608105  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.461421 (* 1 = 0.461421 loss)
I0411 20:40:18.608132  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.78622 (* 1 = 0.78622 loss)
I0411 20:40:18.608152  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.462352 (* 1 = 0.462352 loss)
I0411 20:40:18.608160  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.271863 (* 1 = 0.271863 loss)
I0411 20:40:18.608167  2805 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0411 20:41:00.803199  2805 solver.cpp:229] Iteration 80, loss = 2.20177
I0411 20:41:00.803251  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.593007 (* 1 = 0.593007 loss)
I0411 20:41:00.803259  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.40092 (* 1 = 1.40092 loss)
I0411 20:41:00.803266  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.186881 (* 1 = 0.186881 loss)
I0411 20:41:00.803272  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.16546 (* 1 = 0.16546 loss)
I0411 20:41:00.803279  2805 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0411 20:41:42.612589  2805 solver.cpp:229] Iteration 100, loss = 2.00107
I0411 20:41:42.612620  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.252181 (* 1 = 0.252181 loss)
I0411 20:41:42.612658  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.52109 (* 1 = 1.52109 loss)
I0411 20:41:42.612665  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.829931 (* 1 = 0.829931 loss)
I0411 20:41:42.612685  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.41192 (* 1 = 0.41192 loss)
I0411 20:41:42.612694  2805 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0411 20:42:24.937575  2805 solver.cpp:229] Iteration 120, loss = 2.35423
I0411 20:42:24.937608  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.602865 (* 1 = 0.602865 loss)
I0411 20:42:24.937634  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.5603 (* 1 = 1.5603 loss)
I0411 20:42:24.937641  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.0933001 (* 1 = 0.0933001 loss)
I0411 20:42:24.937647  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0276316 (* 1 = 0.0276316 loss)
I0411 20:42:24.937655  2805 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0411 20:43:07.819541  2805 solver.cpp:229] Iteration 140, loss = 1.77055
I0411 20:43:07.819593  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.479741 (* 1 = 0.479741 loss)
I0411 20:43:07.819602  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.58525 (* 1 = 0.58525 loss)
I0411 20:43:07.819608  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.257169 (* 1 = 0.257169 loss)
I0411 20:43:07.819615  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.131074 (* 1 = 0.131074 loss)
I0411 20:43:07.819622  2805 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0411 20:43:49.378015  2805 solver.cpp:229] Iteration 160, loss = 1.6022
I0411 20:43:49.378065  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.36018 (* 1 = 0.36018 loss)
I0411 20:43:49.378074  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.755108 (* 1 = 0.755108 loss)
I0411 20:43:49.378082  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.0990971 (* 1 = 0.0990971 loss)
I0411 20:43:49.378103  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.104139 (* 1 = 0.104139 loss)
I0411 20:43:49.378113  2805 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0411 20:44:30.928918  2805 solver.cpp:229] Iteration 180, loss = 1.24768
I0411 20:44:30.928972  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.491391 (* 1 = 0.491391 loss)
I0411 20:44:30.928980  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.632035 (* 1 = 0.632035 loss)
I0411 20:44:30.929000  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.0766447 (* 1 = 0.0766447 loss)
I0411 20:44:30.929006  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0413153 (* 1 = 0.0413153 loss)
I0411 20:44:30.929014  2805 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 2.104s / iter
I0411 20:45:13.079707  2805 solver.cpp:229] Iteration 200, loss = 2.45984
I0411 20:45:13.079758  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.58948 (* 1 = 0.58948 loss)
I0411 20:45:13.079767  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.71327 (* 1 = 1.71327 loss)
I0411 20:45:13.079774  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.319703 (* 1 = 0.319703 loss)
I0411 20:45:13.079780  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.119102 (* 1 = 0.119102 loss)
I0411 20:45:13.079788  2805 sgd_solver.cpp:106] Iteration 200, lr = 0.001
I0411 20:45:54.863330  2805 solver.cpp:229] Iteration 220, loss = 1.58352
I0411 20:45:54.863371  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.5745 (* 1 = 0.5745 loss)
I0411 20:45:54.863397  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.26376 (* 1 = 1.26376 loss)
I0411 20:45:54.863404  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.340544 (* 1 = 0.340544 loss)
I0411 20:45:54.863411  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0886635 (* 1 = 0.0886635 loss)
I0411 20:45:54.863418  2805 sgd_solver.cpp:106] Iteration 220, lr = 0.001
I0411 20:46:41.160358  2805 solver.cpp:229] Iteration 240, loss = 2.60632
I0411 20:46:41.160392  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.620663 (* 1 = 0.620663 loss)
I0411 20:46:41.160419  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.68186 (* 1 = 1.68186 loss)
I0411 20:46:41.160426  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.236035 (* 1 = 0.236035 loss)
I0411 20:46:41.160432  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.078942 (* 1 = 0.078942 loss)
I0411 20:46:41.160439  2805 sgd_solver.cpp:106] Iteration 240, lr = 0.001
I0411 20:47:23.116621  2805 solver.cpp:229] Iteration 260, loss = 2.16553
I0411 20:47:23.116679  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.687127 (* 1 = 0.687127 loss)
I0411 20:47:23.116689  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.781923 (* 1 = 0.781923 loss)
I0411 20:47:23.116695  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.284612 (* 1 = 0.284612 loss)
I0411 20:47:23.116703  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.17816 (* 1 = 0.17816 loss)
I0411 20:47:23.116724  2805 sgd_solver.cpp:106] Iteration 260, lr = 0.001



I0411 20:48:05.534776  2805 solver.cpp:229] Iteration 280, loss = 1.32893
I0411 20:48:05.534809  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.223716 (* 1 = 0.223716 loss)
I0411 20:48:05.534837  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.625219 (* 1 = 0.625219 loss)
I0411 20:48:05.534843  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.151325 (* 1 = 0.151325 loss)
I0411 20:48:05.534849  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.111934 (* 1 = 0.111934 loss)
I0411 20:48:05.534857  2805 sgd_solver.cpp:106] Iteration 280, lr = 0.001
I0411 20:48:46.726526  2805 solver.cpp:229] Iteration 300, loss = 1.45148
I0411 20:48:46.726560  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.334289 (* 1 = 0.334289 loss)
I0411 20:48:46.726588  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.820912 (* 1 = 0.820912 loss)
I0411 20:48:46.726608  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.192393 (* 1 = 0.192393 loss)
I0411 20:48:46.726615  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.02981 (* 1 = 0.02981 loss)
I0411 20:48:46.726624  2805 sgd_solver.cpp:106] Iteration 300, lr = 0.001
I0411 20:49:28.001055  2805 solver.cpp:229] Iteration 320, loss = 1.83564
I0411 20:49:28.001086  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.424411 (* 1 = 0.424411 loss)
I0411 20:49:28.001113  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.04589 (* 1 = 1.04589 loss)
I0411 20:49:28.001121  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.106049 (* 1 = 0.106049 loss)
I0411 20:49:28.001140  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0108732 (* 1 = 0.0108732 loss)
I0411 20:49:28.001148  2805 sgd_solver.cpp:106] Iteration 320, lr = 0.001




I0411 20:50:10.236464  2805 solver.cpp:229] Iteration 340, loss = 1.46737
I0411 20:50:10.236532  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.401193 (* 1 = 0.401193 loss)
I0411 20:50:10.236541  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.522102 (* 1 = 0.522102 loss)
I0411 20:50:10.236547  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.183078 (* 1 = 0.183078 loss)
I0411 20:50:10.236555  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0245961 (* 1 = 0.0245961 loss)
I0411 20:50:10.236577  2805 sgd_solver.cpp:106] Iteration 340, lr = 0.001
I0411 20:50:52.660858  2805 solver.cpp:229] Iteration 360, loss = 1.01069
I0411 20:50:52.660912  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.0877538 (* 1 = 0.0877538 loss)
I0411 20:50:52.660922  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.129796 (* 1 = 0.129796 loss)
I0411 20:50:52.660928  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.179157 (* 1 = 0.179157 loss)
I0411 20:50:52.660934  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.00840186 (* 1 = 0.00840186 loss)
I0411 20:50:52.660943  2805 sgd_solver.cpp:106] Iteration 360, lr = 0.001
I0411 20:51:35.111536  2805 solver.cpp:229] Iteration 380, loss = 1.63535
I0411 20:51:35.111588  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.384397 (* 1 = 0.384397 loss)
I0411 20:51:35.111604  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.45233 (* 1 = 0.45233 loss)
I0411 20:51:35.111629  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.149066 (* 1 = 0.149066 loss)
I0411 20:51:35.111635  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.00951693 (* 1 = 0.00951693 loss)
I0411 20:51:35.111644  2805 sgd_solver.cpp:106] Iteration 380, lr = 0.001
speed: 2.113s / iter
I0411 20:52:17.580335  2805 solver.cpp:229] Iteration 400, loss = 1.87549
I0411 20:52:17.580389  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.636824 (* 1 = 0.636824 loss)
I0411 20:52:17.580415  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.13855 (* 1 = 1.13855 loss)
I0411 20:52:17.580435  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.252384 (* 1 = 0.252384 loss)
I0411 20:52:17.580441  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0378734 (* 1 = 0.0378734 loss)
I0411 20:52:17.580449  2805 sgd_solver.cpp:106] Iteration 400, lr = 0.001
I0411 20:53:01.085537  2805 solver.cpp:229] Iteration 420, loss = 0.980998
I0411 20:53:01.085571  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.46118 (* 1 = 0.46118 loss)
I0411 20:53:01.085597  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.327799 (* 1 = 0.327799 loss)
I0411 20:53:01.085603  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.148699 (* 1 = 0.148699 loss)
I0411 20:53:01.085610  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0527788 (* 1 = 0.0527788 loss)
I0411 20:53:01.085639  2805 sgd_solver.cpp:106] Iteration 420, lr = 0.001
I0411 20:53:43.219674  2805 solver.cpp:229] Iteration 440, loss = 1.17874
I0411 20:53:43.219707  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.230922 (* 1 = 0.230922 loss)
I0411 20:53:43.219733  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.245871 (* 1 = 0.245871 loss)
I0411 20:53:43.219740  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.189983 (* 1 = 0.189983 loss)
I0411 20:53:43.219746  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.179338 (* 1 = 0.179338 loss)
I0411 20:53:43.219754  2805 sgd_solver.cpp:106] Iteration 440, lr = 0.001
I0411 20:54:25.059005  2805 solver.cpp:229] Iteration 460, loss = 1.68427
I0411 20:54:25.059036  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.544447 (* 1 = 0.544447 loss)
I0411 20:54:25.059063  2805 solver.cpp:245]     Train net output #1: loss_cls = 1.05097 (* 1 = 1.05097 loss)
I0411 20:54:25.059070  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.400103 (* 1 = 0.400103 loss)
I0411 20:54:25.059090  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.402463 (* 1 = 0.402463 loss)
I0411 20:54:25.059098  2805 sgd_solver.cpp:106] Iteration 460, lr = 0.001
I0411 20:55:07.323844  2805 solver.cpp:229] Iteration 480, loss = 1.54486
I0411 20:55:07.323875  2805 solver.cpp:245]     Train net output #0: loss_bbox = 0.567297 (* 1 = 0.567297 loss)
I0411 20:55:07.323902  2805 solver.cpp:245]     Train net output #1: loss_cls = 0.844869 (* 1 = 0.844869 loss)
I0411 20:55:07.323909  2805 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.0858862 (* 1 = 0.0858862 loss)
I0411 20:55:07.323916  2805 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0305048 (* 1 = 0.0305048 loss)
I0411 20:55:07.323923  2805 sgd_solver.cpp:106] Iteration 480, lr = 0.001
Wrote snapshot to: /mnt/c/Users/Lavenger/git/py-faster-rcnn/output/faster_rcnn_end2end/coco_2014_train/bigdata_faster_rcnn_iter_500.caffemodel
done solving
